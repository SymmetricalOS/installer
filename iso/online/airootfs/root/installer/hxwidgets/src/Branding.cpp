// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Branding
#include <Branding.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_4_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",4,0x2fce2d43)
HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_5_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",5,0x2fce2d43)
HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_7_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",7,0x2fce2d43)
HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_8_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",8,0x2fce2d43)
HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_10_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",10,0x2fce2d43)
HX_LOCAL_STACK_FRAME(_hx_pos_45c0b6db7b32694a_11_boot,"Branding","boot",0x5da88925,"Branding.boot","Branding.hx",11,0x2fce2d43)

void Branding_obj::__construct() { }

Dynamic Branding_obj::__CreateEmpty() { return new Branding_obj; }

void *Branding_obj::_hx_vtable = 0;

Dynamic Branding_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Branding_obj > _hx_result = new Branding_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Branding_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x003c731b;
}

::String Branding_obj::name;

::String Branding_obj::shortName;

::String Branding_obj::version;

::String Branding_obj::shortVersion;

::String Branding_obj::versionedName;

::String Branding_obj::shortVersionedName;


Branding_obj::Branding_obj()
{
}

bool Branding_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { outValue = ( name ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( version ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"shortName") ) { outValue = ( shortName ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"shortVersion") ) { outValue = ( shortVersion ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"versionedName") ) { outValue = ( versionedName ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"shortVersionedName") ) { outValue = ( shortVersionedName ); return true; }
	}
	return false;
}

bool Branding_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=ioValue.Cast< ::String >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"shortName") ) { shortName=ioValue.Cast< ::String >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"shortVersion") ) { shortVersion=ioValue.Cast< ::String >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"versionedName") ) { versionedName=ioValue.Cast< ::String >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"shortVersionedName") ) { shortVersionedName=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Branding_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Branding_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Branding_obj::name,HX_("name",4b,72,ff,48)},
	{::hx::fsString,(void *) &Branding_obj::shortName,HX_("shortName",e7,10,c2,99)},
	{::hx::fsString,(void *) &Branding_obj::version,HX_("version",18,e7,f1,7c)},
	{::hx::fsString,(void *) &Branding_obj::shortVersion,HX_("shortVersion",fc,51,43,68)},
	{::hx::fsString,(void *) &Branding_obj::versionedName,HX_("versionedName",62,5b,d2,35)},
	{::hx::fsString,(void *) &Branding_obj::shortVersionedName,HX_("shortVersionedName",46,09,2d,e0)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Branding_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Branding_obj::name,"name");
	HX_MARK_MEMBER_NAME(Branding_obj::shortName,"shortName");
	HX_MARK_MEMBER_NAME(Branding_obj::version,"version");
	HX_MARK_MEMBER_NAME(Branding_obj::shortVersion,"shortVersion");
	HX_MARK_MEMBER_NAME(Branding_obj::versionedName,"versionedName");
	HX_MARK_MEMBER_NAME(Branding_obj::shortVersionedName,"shortVersionedName");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Branding_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Branding_obj::name,"name");
	HX_VISIT_MEMBER_NAME(Branding_obj::shortName,"shortName");
	HX_VISIT_MEMBER_NAME(Branding_obj::version,"version");
	HX_VISIT_MEMBER_NAME(Branding_obj::shortVersion,"shortVersion");
	HX_VISIT_MEMBER_NAME(Branding_obj::versionedName,"versionedName");
	HX_VISIT_MEMBER_NAME(Branding_obj::shortVersionedName,"shortVersionedName");
};

#endif

::hx::Class Branding_obj::__mClass;

static ::String Branding_obj_sStaticFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("shortName",e7,10,c2,99),
	HX_("version",18,e7,f1,7c),
	HX_("shortVersion",fc,51,43,68),
	HX_("versionedName",62,5b,d2,35),
	HX_("shortVersionedName",46,09,2d,e0),
	::String(null())
};

void Branding_obj::__register()
{
	Branding_obj _hx_dummy;
	Branding_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Branding",5b,80,ab,a4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Branding_obj::__GetStatic;
	__mClass->mSetStaticField = &Branding_obj::__SetStatic;
	__mClass->mMarkFunc = Branding_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Branding_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Branding_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Branding_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Branding_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Branding_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Branding_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_4_boot)
HXDLIN(   4)		name = HX_("Symmetrical OS",82,ad,9a,a3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_5_boot)
HXDLIN(   5)		shortName = HX_("SymmOS",4a,60,7a,23);
            	}
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_7_boot)
HXDLIN(   7)		version = HX_("1.0 \"Cerulean Copper\"",49,6a,f5,4b);
            	}
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_8_boot)
HXDLIN(   8)		shortVersion = HX_("1.0",b3,56,25,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_10_boot)
HXDLIN(  10)		versionedName = ((::Branding_obj::name + HX_(" ",20,00,00,00)) + ::Branding_obj::version);
            	}
{
            	HX_STACKFRAME(&_hx_pos_45c0b6db7b32694a_11_boot)
HXDLIN(  11)		shortVersionedName = ((::Branding_obj::shortName + HX_(" ",20,00,00,00)) + ::Branding_obj::shortVersion);
            	}
}

