// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_b8bebb965831469f
#define INCLUDED_b8bebb965831469f
#include "wx/event.h"
#endif
#ifndef INCLUDED_hx_widgets_Event
#include <hx/widgets/Event.h>
#endif
#ifndef INCLUDED_hx_widgets_IdleEvent
#include <hx/widgets/IdleEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2f562ccbab756fec_6_new,"hx.widgets.IdleEvent","new",0xf2b573db,"hx.widgets.IdleEvent.new","hx/widgets/IdleEvent.hx",6,0x25dae3f7)
HX_LOCAL_STACK_FRAME(_hx_pos_2f562ccbab756fec_8_requestMore,"hx.widgets.IdleEvent","requestMore",0xacfc54ff,"hx.widgets.IdleEvent.requestMore","hx/widgets/IdleEvent.hx",8,0x25dae3f7)
HX_LOCAL_STACK_FRAME(_hx_pos_2f562ccbab756fec_16_get_idleEventRef,"hx.widgets.IdleEvent","get_idleEventRef",0x909164bb,"hx.widgets.IdleEvent.get_idleEventRef","hx/widgets/IdleEvent.hx",16,0x25dae3f7)
namespace hx{
namespace widgets{

void IdleEvent_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_2f562ccbab756fec_6_new)
HXDLIN(   6)		super::__construct();
            	}

Dynamic IdleEvent_obj::__CreateEmpty() { return new IdleEvent_obj; }

void *IdleEvent_obj::_hx_vtable = 0;

Dynamic IdleEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IdleEvent_obj > _hx_result = new IdleEvent_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool IdleEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x24ffb6ab) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x24ffb6ab;
	} else {
		return inClassId==(int)0x4f345a43;
	}
}

void IdleEvent_obj::requestMore(::hx::Null< bool >  __o_needMore){
            		bool needMore = __o_needMore.Default(true);
            	HX_STACKFRAME(&_hx_pos_2f562ccbab756fec_8_requestMore)
HXDLIN(   8)		this->get_idleEventRef()->ptr->RequestMore(needMore);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IdleEvent_obj,requestMore,(void))

::cpp::Pointer<  wxIdleEvent > IdleEvent_obj::get_idleEventRef(){
            	HX_STACKFRAME(&_hx_pos_2f562ccbab756fec_16_get_idleEventRef)
HXDLIN(  16)		return this->_ref->reinterpret();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IdleEvent_obj,get_idleEventRef,return )


::hx::ObjectPtr< IdleEvent_obj > IdleEvent_obj::__new() {
	::hx::ObjectPtr< IdleEvent_obj > __this = new IdleEvent_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< IdleEvent_obj > IdleEvent_obj::__alloc(::hx::Ctx *_hx_ctx) {
	IdleEvent_obj *__this = (IdleEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IdleEvent_obj), true, "hx.widgets.IdleEvent"));
	*(void **)__this = IdleEvent_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

IdleEvent_obj::IdleEvent_obj()
{
}

void IdleEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IdleEvent);
	HX_MARK_MEMBER_NAME(idleEventRef,"idleEventRef");
	 ::hx::widgets::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void IdleEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(idleEventRef,"idleEventRef");
	 ::hx::widgets::Event_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val IdleEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"requestMore") ) { return ::hx::Val( requestMore_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"idleEventRef") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_idleEventRef() : idleEventRef ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_idleEventRef") ) { return ::hx::Val( get_idleEventRef_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val IdleEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"idleEventRef") ) { idleEventRef=inValue.Cast< ::cpp::Pointer<  wxIdleEvent > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IdleEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("idleEventRef",8d,ec,96,41));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo IdleEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /* ::cpp::Pointer<  wxIdleEvent > */ ,(int)offsetof(IdleEvent_obj,idleEventRef),HX_("idleEventRef",8d,ec,96,41)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *IdleEvent_obj_sStaticStorageInfo = 0;
#endif

static ::String IdleEvent_obj_sMemberFields[] = {
	HX_("requestMore",84,3e,c2,e1),
	HX_("idleEventRef",8d,ec,96,41),
	HX_("get_idleEventRef",16,d9,35,46),
	::String(null()) };

::hx::Class IdleEvent_obj::__mClass;

void IdleEvent_obj::__register()
{
	IdleEvent_obj _hx_dummy;
	IdleEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.widgets.IdleEvent",69,ea,a9,92);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(IdleEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< IdleEvent_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IdleEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IdleEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace widgets
