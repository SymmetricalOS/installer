// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_17f2a4542ec8b462
#define INCLUDED_17f2a4542ec8b462
#include "wx/dataview.h"
#endif
#ifndef INCLUDED_83f71eba104de7a2
#define INCLUDED_83f71eba104de7a2
#include "wx/gdicmn.h"
#endif
#ifndef INCLUDED_04e4e804b5ca744c
#define INCLUDED_04e4e804b5ca744c
#include "wx/icon.h"
#endif
#ifndef INCLUDED_1b92b9574f32bb54
#define INCLUDED_1b92b9574f32bb54
#include "wx/imaglist.h"
#endif
#ifndef INCLUDED_eb4c1394ce7c5dd4
#define INCLUDED_eb4c1394ce7c5dd4
#include "wx/object.h"
#endif
#ifndef INCLUDED_058190ed12c7e803
#define INCLUDED_058190ed12c7e803
#include "wx/string.h"
#endif
#ifndef INCLUDED_aa68ac286eaa278a
#define INCLUDED_aa68ac286eaa278a
#include "wx/window.h"
#endif
#ifndef INCLUDED_hx_widgets_Control
#include <hx/widgets/Control.h>
#endif
#ifndef INCLUDED_hx_widgets_DataViewCtrl
#include <hx/widgets/DataViewCtrl.h>
#endif
#ifndef INCLUDED_hx_widgets_DataViewItem
#include <hx/widgets/DataViewItem.h>
#endif
#ifndef INCLUDED_hx_widgets_DataViewTreeCtrl
#include <hx/widgets/DataViewTreeCtrl.h>
#endif
#ifndef INCLUDED_hx_widgets_EvtHandler
#include <hx/widgets/EvtHandler.h>
#endif
#ifndef INCLUDED_hx_widgets_ImageList
#include <hx/widgets/ImageList.h>
#endif
#ifndef INCLUDED_hx_widgets_Object
#include <hx/widgets/Object.h>
#endif
#ifndef INCLUDED_hx_widgets_Point
#include <hx/widgets/Point.h>
#endif
#ifndef INCLUDED_hx_widgets_Size
#include <hx/widgets/Size.h>
#endif
#ifndef INCLUDED_hx_widgets_Trackable
#include <hx/widgets/Trackable.h>
#endif
#ifndef INCLUDED_hx_widgets_Window
#include <hx/widgets/Window.h>
#endif
#ifndef INCLUDED_wx_widgets_styles_DataViewCtrlStyle
#include <wx/widgets/styles/DataViewCtrlStyle.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_39ebb083e28b6be6_14_new,"hx.widgets.DataViewTreeCtrl","new",0x876cedc7,"hx.widgets.DataViewTreeCtrl.new","hx/widgets/DataViewTreeCtrl.hx",14,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_29_appendContainer,"hx.widgets.DataViewTreeCtrl","appendContainer",0x191b83ee,"hx.widgets.DataViewTreeCtrl.appendContainer","hx/widgets/DataViewTreeCtrl.hx",29,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_42_prependContainer,"hx.widgets.DataViewTreeCtrl","prependContainer",0xd1a2ba8c,"hx.widgets.DataViewTreeCtrl.prependContainer","hx/widgets/DataViewTreeCtrl.hx",42,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_56_insertContainer,"hx.widgets.DataViewTreeCtrl","insertContainer",0x15007eaf,"hx.widgets.DataViewTreeCtrl.insertContainer","hx/widgets/DataViewTreeCtrl.hx",56,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_71_appendItem,"hx.widgets.DataViewTreeCtrl","appendItem",0x8c0c3586,"hx.widgets.DataViewTreeCtrl.appendItem","hx/widgets/DataViewTreeCtrl.hx",71,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_84_prependItem,"hx.widgets.DataViewTreeCtrl","prependItem",0x69cc83a8,"hx.widgets.DataViewTreeCtrl.prependItem","hx/widgets/DataViewTreeCtrl.hx",84,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_97_insertItem,"hx.widgets.DataViewTreeCtrl","insertItem",0x63eb3265,"hx.widgets.DataViewTreeCtrl.insertItem","hx/widgets/DataViewTreeCtrl.hx",97,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_116_get_imageList,"hx.widgets.DataViewTreeCtrl","get_imageList",0xb7480957,"hx.widgets.DataViewTreeCtrl.get_imageList","hx/widgets/DataViewTreeCtrl.hx",116,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_119_set_imageList,"hx.widgets.DataViewTreeCtrl","set_imageList",0xfc4deb63,"hx.widgets.DataViewTreeCtrl.set_imageList","hx/widgets/DataViewTreeCtrl.hx",119,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_128_getItemText,"hx.widgets.DataViewTreeCtrl","getItemText",0xd009627d,"hx.widgets.DataViewTreeCtrl.getItemText","hx/widgets/DataViewTreeCtrl.hx",128,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_133_setItemText,"hx.widgets.DataViewTreeCtrl","setItemText",0xda766989,"hx.widgets.DataViewTreeCtrl.setItemText","hx/widgets/DataViewTreeCtrl.hx",133,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_140_setItemIconIndex,"hx.widgets.DataViewTreeCtrl","setItemIconIndex",0xaba9b27d,"hx.widgets.DataViewTreeCtrl.setItemIconIndex","hx/widgets/DataViewTreeCtrl.hx",140,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_144_deleteAllItems,"hx.widgets.DataViewTreeCtrl","deleteAllItems",0xc5bea863,"hx.widgets.DataViewTreeCtrl.deleteAllItems","hx/widgets/DataViewTreeCtrl.hx",144,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_148_deleteChildren,"hx.widgets.DataViewTreeCtrl","deleteChildren",0x7b385683,"hx.widgets.DataViewTreeCtrl.deleteChildren","hx/widgets/DataViewTreeCtrl.hx",148,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_152_deleteItem,"hx.widgets.DataViewTreeCtrl","deleteItem",0xd14d1057,"hx.widgets.DataViewTreeCtrl.deleteItem","hx/widgets/DataViewTreeCtrl.hx",152,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_156_isContainer,"hx.widgets.DataViewTreeCtrl","isContainer",0x9e13885e,"hx.widgets.DataViewTreeCtrl.isContainer","hx/widgets/DataViewTreeCtrl.hx",156,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_159_getChildCount,"hx.widgets.DataViewTreeCtrl","getChildCount",0x114d95f0,"hx.widgets.DataViewTreeCtrl.getChildCount","hx/widgets/DataViewTreeCtrl.hx",159,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_167_getNthChild,"hx.widgets.DataViewTreeCtrl","getNthChild",0xff7e97f7,"hx.widgets.DataViewTreeCtrl.getNthChild","hx/widgets/DataViewTreeCtrl.hx",167,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_180_getItemIndex,"hx.widgets.DataViewTreeCtrl","getItemIndex",0xe8a81b42,"hx.widgets.DataViewTreeCtrl.getItemIndex","hx/widgets/DataViewTreeCtrl.hx",180,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_191_getNextItem,"hx.widgets.DataViewTreeCtrl","getNextItem",0x179f8ac3,"hx.widgets.DataViewTreeCtrl.getNextItem","hx/widgets/DataViewTreeCtrl.hx",191,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_204_getPrevItem,"hx.widgets.DataViewTreeCtrl","getPrevItem",0x34a0c4c3,"hx.widgets.DataViewTreeCtrl.getPrevItem","hx/widgets/DataViewTreeCtrl.hx",204,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_219_get_indent,"hx.widgets.DataViewTreeCtrl","get_indent",0xbcbae9ae,"hx.widgets.DataViewTreeCtrl.get_indent","hx/widgets/DataViewTreeCtrl.hx",219,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_221_set_indent,"hx.widgets.DataViewTreeCtrl","set_indent",0xc0388822,"hx.widgets.DataViewTreeCtrl.set_indent","hx/widgets/DataViewTreeCtrl.hx",221,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_231_get_dataViewTreeCtrlRef,"hx.widgets.DataViewTreeCtrl","get_dataViewTreeCtrlRef",0x16dfb3b9,"hx.widgets.DataViewTreeCtrl.get_dataViewTreeCtrlRef","hx/widgets/DataViewTreeCtrl.hx",231,0xff77a7c7)
HX_LOCAL_STACK_FRAME(_hx_pos_39ebb083e28b6be6_15_boot,"hx.widgets.DataViewTreeCtrl","boot",0xeffc20eb,"hx.widgets.DataViewTreeCtrl.boot","hx/widgets/DataViewTreeCtrl.hx",15,0xff77a7c7)
namespace hx{
namespace widgets{

void DataViewTreeCtrl_obj::__construct( ::hx::widgets::Window parent,::hx::Null< int >  __o_style,::hx::Null< int >  __o_id){
            		int style = __o_style.Default(0);
            		int id = __o_id.Default(-1);
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_14_new)
HXLINE( 112)		this->_imageList = null();
HXLINE(  18)		if (::hx::IsNull( this->_ref )) {
HXLINE(  19)			this->_ref = ::cpp::Pointer_obj::fromRaw((new wxDataViewTreeCtrl()))->reinterpret();
HXLINE(  20)			if ((style == 0)) {
HXLINE(  21)				style = ::wx::widgets::styles::DataViewCtrlStyle_obj::DV_NO_HEADER;
            			}
HXLINE(  23)			 wxDataViewTreeCtrl * _hx_tmp = this->get_dataViewTreeCtrlRef()->ptr;
HXDLIN(  23)			 wxWindow* _hx_tmp1 = ::hx::widgets::Window_obj::toRaw(parent);
HXDLIN(  23)			 wxPoint & _hx_tmp2 = ::hx::widgets::Point_obj::get_defaultPosition()->get_ref();
HXDLIN(  23)			 wxSize & _hx_tmp3 = ::hx::widgets::Size_obj::get_defaultSize()->get_ref();
HXDLIN(  23)			(*(_hx_tmp)).Create(_hx_tmp1,id,_hx_tmp2,_hx_tmp3,style);
            		}
HXLINE(  26)		super::__construct(parent,id,null());
            	}

Dynamic DataViewTreeCtrl_obj::__CreateEmpty() { return new DataViewTreeCtrl_obj; }

void *DataViewTreeCtrl_obj::_hx_vtable = 0;

Dynamic DataViewTreeCtrl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DataViewTreeCtrl_obj > _hx_result = new DataViewTreeCtrl_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool DataViewTreeCtrl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2bc5f4d5) {
		if (inClassId<=(int)0x2045b63e) {
			if (inClassId<=(int)0x0345708e) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0345708e;
			} else {
				return inClassId==(int)0x2045b63e;
			}
		} else {
			return inClassId==(int)0x2bc5f4d5;
		}
	} else {
		if (inClassId<=(int)0x5d92cb6f) {
			return inClassId==(int)0x467ba226 || inClassId==(int)0x5d92cb6f;
		} else {
			return inClassId==(int)0x7f05c403;
		}
	}
}

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::appendContainer( ::hx::widgets::DataViewItem parent,::String text,::hx::Null< int >  __o_icon,::hx::Null< int >  __o_expanded){
            		int icon = __o_icon.Default(-1);
            		int expanded = __o_expanded.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_29_appendContainer)
HXLINE(  30)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  31)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE(  32)		if (::hx::IsNull( parent )) {
HXLINE(  33)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->AppendContainer(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,s,icon,expanded);
            		}
            		else {
HXLINE(  35)			 wxDataViewItem parentItem = parent->_item;
HXLINE(  36)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->AppendContainer(parentItem,s,icon,expanded);
            		}
HXLINE(  39)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC4(DataViewTreeCtrl_obj,appendContainer,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::prependContainer( ::hx::widgets::DataViewItem parent,::String text,::hx::Null< int >  __o_icon,::hx::Null< int >  __o_expanded){
            		int icon = __o_icon.Default(-1);
            		int expanded = __o_expanded.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_42_prependContainer)
HXLINE(  43)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  44)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE(  45)		if (::hx::IsNull( parent )) {
HXLINE(  46)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->PrependContainer(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,s,icon,expanded);
            		}
            		else {
HXLINE(  48)			 wxDataViewItem parentItem = parent->_item;
HXLINE(  49)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->PrependContainer(parentItem,s,icon,expanded);
            		}
HXLINE(  52)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC4(DataViewTreeCtrl_obj,prependContainer,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::insertContainer( ::hx::widgets::DataViewItem parent, ::hx::widgets::DataViewItem previous,::String text,::hx::Null< int >  __o_icon,::hx::Null< int >  __o_expanded){
            		int icon = __o_icon.Default(-1);
            		int expanded = __o_expanded.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_56_insertContainer)
HXLINE(  57)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  58)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE(  59)		if (::hx::IsNull( parent )) {
HXLINE(  60)			 wxDataViewItem previousItem = previous->_item;
HXLINE(  61)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->InsertContainer(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,previousItem,s,icon,expanded);
            		}
            		else {
HXLINE(  63)			 wxDataViewItem parentItem = parent->_item;
HXLINE(  64)			 wxDataViewItem previousItem1 = previous->_item;
HXLINE(  65)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->InsertContainer(parentItem,previousItem1,s,icon,expanded);
            		}
HXLINE(  68)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC5(DataViewTreeCtrl_obj,insertContainer,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::appendItem( ::hx::widgets::DataViewItem parent,::String text,::hx::Null< int >  __o_icon){
            		int icon = __o_icon.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_71_appendItem)
HXLINE(  72)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  73)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE(  74)		if (::hx::IsNull( parent )) {
HXLINE(  75)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->AppendItem(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,s,icon);
            		}
            		else {
HXLINE(  77)			 wxDataViewItem parentItem = parent->_item;
HXLINE(  78)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->AppendItem(parentItem,s,icon);
            		}
HXLINE(  81)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC3(DataViewTreeCtrl_obj,appendItem,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::prependItem( ::hx::widgets::DataViewItem parent,::String text,::hx::Null< int >  __o_icon){
            		int icon = __o_icon.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_84_prependItem)
HXLINE(  85)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  86)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE(  87)		if (::hx::IsNull( parent )) {
HXLINE(  88)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->PrependItem(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,s,icon);
            		}
            		else {
HXLINE(  90)			 wxDataViewItem parentItem = parent->_item;
HXLINE(  91)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->PrependItem(parentItem,s,icon);
            		}
HXLINE(  94)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC3(DataViewTreeCtrl_obj,prependItem,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::insertItem( ::hx::widgets::DataViewItem parent, ::hx::widgets::DataViewItem previous,::String text,::hx::Null< int >  __o_icon){
            		int icon = __o_icon.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_97_insertItem)
HXLINE(  98)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE(  99)		 ::hx::widgets::DataViewItem newItem =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE( 100)		if (::hx::IsNull( parent )) {
HXLINE( 101)			 wxDataViewItem previousItem = previous->_item;
HXLINE( 102)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->InsertItem(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,previousItem,s,icon);
            		}
            		else {
HXLINE( 104)			 wxDataViewItem parentItem = parent->_item;
HXLINE( 105)			 wxDataViewItem previousItem1 = previous->_item;
HXLINE( 106)			newItem->_item = this->get_dataViewTreeCtrlRef()->ptr->InsertItem(parentItem,previousItem1,s,icon);
            		}
HXLINE( 109)		return newItem;
            	}


HX_DEFINE_DYNAMIC_FUNC4(DataViewTreeCtrl_obj,insertItem,return )

 ::hx::widgets::ImageList DataViewTreeCtrl_obj::get_imageList(){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_116_get_imageList)
HXDLIN( 116)		return this->_imageList;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DataViewTreeCtrl_obj,get_imageList,return )

 ::hx::widgets::ImageList DataViewTreeCtrl_obj::set_imageList( ::hx::widgets::ImageList value){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_119_set_imageList)
HXLINE( 120)		if (::hx::IsNotNull( this->_imageList )) {
HXLINE( 121)			this->_imageList->destroy();
            		}
HXLINE( 123)		this->_imageList = value;
HXLINE( 124)		 wxDataViewTreeCtrl * _hx_tmp = this->get_dataViewTreeCtrlRef()->ptr;
HXDLIN( 124)		(*(_hx_tmp)).SetImageList(value->get_imagelistRef()->get_raw());
HXLINE( 125)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,set_imageList,return )

::String DataViewTreeCtrl_obj::getItemText( ::hx::widgets::DataViewItem item){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_128_getItemText)
HXLINE( 129)		 wxString r = this->get_dataViewTreeCtrlRef()->ptr->GetItemText(item->_item);
HXLINE( 130)		return ::String(::String(r.ToUTF8().data()));
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,getItemText,return )

void DataViewTreeCtrl_obj::setItemText( ::hx::widgets::DataViewItem item,::String text){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_133_setItemText)
HXLINE( 134)		 wxString s = wxString::FromUTF8(text.utf8_str());
HXLINE( 135)		this->get_dataViewTreeCtrlRef()->ptr->SetItemText(item->_item,s);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DataViewTreeCtrl_obj,setItemText,(void))

void DataViewTreeCtrl_obj::setItemIconIndex( ::hx::widgets::DataViewItem item,int iconIndex){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_140_setItemIconIndex)
HXDLIN( 140)		 wxDataViewTreeCtrl * _hx_tmp = this->get_dataViewTreeCtrlRef()->ptr;
HXDLIN( 140)		 wxDataViewItem item1 = item->_item;
HXDLIN( 140)		(*(_hx_tmp)).SetItemIcon(item1,this->_imageList->get_imagelistRef()->ptr->GetIcon(iconIndex));
            	}


HX_DEFINE_DYNAMIC_FUNC2(DataViewTreeCtrl_obj,setItemIconIndex,(void))

void DataViewTreeCtrl_obj::deleteAllItems(){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_144_deleteAllItems)
HXDLIN( 144)		this->get_dataViewTreeCtrlRef()->ptr->DeleteAllItems();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DataViewTreeCtrl_obj,deleteAllItems,(void))

void DataViewTreeCtrl_obj::deleteChildren( ::hx::widgets::DataViewItem item){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_148_deleteChildren)
HXDLIN( 148)		this->get_dataViewTreeCtrlRef()->ptr->DeleteChildren(item->_item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,deleteChildren,(void))

void DataViewTreeCtrl_obj::deleteItem( ::hx::widgets::DataViewItem item){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_152_deleteItem)
HXDLIN( 152)		this->get_dataViewTreeCtrlRef()->ptr->DeleteItem(item->_item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,deleteItem,(void))

bool DataViewTreeCtrl_obj::isContainer( ::hx::widgets::DataViewItem item){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_156_isContainer)
HXDLIN( 156)		return this->get_dataViewTreeCtrlRef()->ptr->IsContainer(item->_item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,isContainer,return )

int DataViewTreeCtrl_obj::getChildCount( ::hx::widgets::DataViewItem parent){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_159_getChildCount)
HXLINE( 160)		if (::hx::IsNull( parent )) {
HXLINE( 161)			return this->get_dataViewTreeCtrlRef()->ptr->GetChildCount(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM);
            		}
HXLINE( 164)		return this->get_dataViewTreeCtrlRef()->ptr->GetChildCount(parent->_item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,getChildCount,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::getNthChild( ::hx::widgets::DataViewItem parent,int pos){
            	HX_GC_STACKFRAME(&_hx_pos_39ebb083e28b6be6_167_getNthChild)
HXLINE( 168)		if (::hx::IsNull( parent )) {
HXLINE( 169)			 ::hx::widgets::DataViewItem item =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE( 170)			item->_item = this->get_dataViewTreeCtrlRef()->ptr->GetNthChild(::hx::widgets::DataViewTreeCtrl_obj::NULL_ITEM,pos);
HXLINE( 171)			return item;
            		}
HXLINE( 174)		 ::hx::widgets::DataViewItem item1 =  ::hx::widgets::DataViewItem_obj::__alloc( HX_CTX );
HXLINE( 175)		item1->_item = this->get_dataViewTreeCtrlRef()->ptr->GetNthChild(parent->_item,pos);
HXLINE( 176)		return item1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(DataViewTreeCtrl_obj,getNthChild,return )

int DataViewTreeCtrl_obj::getItemIndex( ::hx::widgets::DataViewItem parent, ::hx::widgets::DataViewItem item){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_180_getItemIndex)
HXLINE( 181)		{
HXLINE( 181)			int _g = 0;
HXDLIN( 181)			int _g1 = this->getChildCount(parent);
HXDLIN( 181)			while((_g < _g1)){
HXLINE( 181)				_g = (_g + 1);
HXDLIN( 181)				int i = (_g - 1);
HXLINE( 182)				 ::hx::widgets::DataViewItem temp = this->getNthChild(parent,i);
HXLINE( 183)				int _hx_tmp = temp->get_id();
HXDLIN( 183)				if ((_hx_tmp == item->get_id())) {
HXLINE( 184)					return i;
            				}
            			}
            		}
HXLINE( 187)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(DataViewTreeCtrl_obj,getItemIndex,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::getNextItem( ::hx::widgets::DataViewItem parent, ::hx::widgets::DataViewItem item,::hx::Null< bool >  __o_wrap){
            		bool wrap = __o_wrap.Default(false);
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_191_getNextItem)
HXLINE( 192)		int max = this->getChildCount(parent);
HXLINE( 193)		int index = this->getItemIndex(parent,item);
HXLINE( 194)		int nextIndex = (index + 1);
HXLINE( 195)		if ((nextIndex > (max - 1))) {
HXLINE( 196)			if ((wrap == false)) {
HXLINE( 197)				return null();
            			}
HXLINE( 199)			nextIndex = 0;
            		}
HXLINE( 201)		return this->getNthChild(parent,nextIndex);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DataViewTreeCtrl_obj,getNextItem,return )

 ::hx::widgets::DataViewItem DataViewTreeCtrl_obj::getPrevItem( ::hx::widgets::DataViewItem parent, ::hx::widgets::DataViewItem item,::hx::Null< bool >  __o_wrap){
            		bool wrap = __o_wrap.Default(false);
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_204_getPrevItem)
HXLINE( 205)		int max = this->getChildCount(parent);
HXLINE( 206)		int index = this->getItemIndex(parent,item);
HXLINE( 207)		int prevIndex = (index - 1);
HXLINE( 208)		if ((prevIndex < 0)) {
HXLINE( 209)			if ((wrap == false)) {
HXLINE( 210)				return null();
            			}
HXLINE( 212)			prevIndex = (max - 1);
            		}
HXLINE( 214)		return this->getNthChild(parent,prevIndex);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DataViewTreeCtrl_obj,getPrevItem,return )

int DataViewTreeCtrl_obj::get_indent(){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_219_get_indent)
HXDLIN( 219)		return this->get_dataViewTreeCtrlRef()->ptr->GetIndent();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DataViewTreeCtrl_obj,get_indent,return )

int DataViewTreeCtrl_obj::set_indent(int value){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_221_set_indent)
HXLINE( 222)		this->get_dataViewTreeCtrlRef()->ptr->SetIndent(value);
HXLINE( 223)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DataViewTreeCtrl_obj,set_indent,return )

::cpp::Pointer<  wxDataViewTreeCtrl > DataViewTreeCtrl_obj::get_dataViewTreeCtrlRef(){
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_231_get_dataViewTreeCtrlRef)
HXDLIN( 231)		return this->_ref->reinterpret();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DataViewTreeCtrl_obj,get_dataViewTreeCtrlRef,return )

 wxDataViewItem DataViewTreeCtrl_obj::NULL_ITEM;


::hx::ObjectPtr< DataViewTreeCtrl_obj > DataViewTreeCtrl_obj::__new( ::hx::widgets::Window parent,::hx::Null< int >  __o_style,::hx::Null< int >  __o_id) {
	::hx::ObjectPtr< DataViewTreeCtrl_obj > __this = new DataViewTreeCtrl_obj();
	__this->__construct(parent,__o_style,__o_id);
	return __this;
}

::hx::ObjectPtr< DataViewTreeCtrl_obj > DataViewTreeCtrl_obj::__alloc(::hx::Ctx *_hx_ctx, ::hx::widgets::Window parent,::hx::Null< int >  __o_style,::hx::Null< int >  __o_id) {
	DataViewTreeCtrl_obj *__this = (DataViewTreeCtrl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DataViewTreeCtrl_obj), true, "hx.widgets.DataViewTreeCtrl"));
	*(void **)__this = DataViewTreeCtrl_obj::_hx_vtable;
	__this->__construct(parent,__o_style,__o_id);
	return __this;
}

DataViewTreeCtrl_obj::DataViewTreeCtrl_obj()
{
}

void DataViewTreeCtrl_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DataViewTreeCtrl);
	HX_MARK_MEMBER_NAME(_imageList,"_imageList");
	HX_MARK_MEMBER_NAME(dataViewTreeCtrlRef,"dataViewTreeCtrlRef");
	 ::hx::widgets::DataViewCtrl_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DataViewTreeCtrl_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_imageList,"_imageList");
	HX_VISIT_MEMBER_NAME(dataViewTreeCtrlRef,"dataViewTreeCtrlRef");
	 ::hx::widgets::DataViewCtrl_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val DataViewTreeCtrl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"indent") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_indent() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"imageList") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_imageList() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"appendItem") ) { return ::hx::Val( appendItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"insertItem") ) { return ::hx::Val( insertItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"_imageList") ) { return ::hx::Val( _imageList ); }
		if (HX_FIELD_EQ(inName,"deleteItem") ) { return ::hx::Val( deleteItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_indent") ) { return ::hx::Val( get_indent_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_indent") ) { return ::hx::Val( set_indent_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"prependItem") ) { return ::hx::Val( prependItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"getItemText") ) { return ::hx::Val( getItemText_dyn() ); }
		if (HX_FIELD_EQ(inName,"setItemText") ) { return ::hx::Val( setItemText_dyn() ); }
		if (HX_FIELD_EQ(inName,"isContainer") ) { return ::hx::Val( isContainer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getNthChild") ) { return ::hx::Val( getNthChild_dyn() ); }
		if (HX_FIELD_EQ(inName,"getNextItem") ) { return ::hx::Val( getNextItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPrevItem") ) { return ::hx::Val( getPrevItem_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getItemIndex") ) { return ::hx::Val( getItemIndex_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_imageList") ) { return ::hx::Val( get_imageList_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_imageList") ) { return ::hx::Val( set_imageList_dyn() ); }
		if (HX_FIELD_EQ(inName,"getChildCount") ) { return ::hx::Val( getChildCount_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"deleteAllItems") ) { return ::hx::Val( deleteAllItems_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteChildren") ) { return ::hx::Val( deleteChildren_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"appendContainer") ) { return ::hx::Val( appendContainer_dyn() ); }
		if (HX_FIELD_EQ(inName,"insertContainer") ) { return ::hx::Val( insertContainer_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"prependContainer") ) { return ::hx::Val( prependContainer_dyn() ); }
		if (HX_FIELD_EQ(inName,"setItemIconIndex") ) { return ::hx::Val( setItemIconIndex_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"dataViewTreeCtrlRef") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_dataViewTreeCtrlRef() : dataViewTreeCtrlRef ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_dataViewTreeCtrlRef") ) { return ::hx::Val( get_dataViewTreeCtrlRef_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DataViewTreeCtrl_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"indent") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_indent(inValue.Cast< int >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"imageList") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_imageList(inValue.Cast<  ::hx::widgets::ImageList >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_imageList") ) { _imageList=inValue.Cast<  ::hx::widgets::ImageList >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"dataViewTreeCtrlRef") ) { dataViewTreeCtrlRef=inValue.Cast< ::cpp::Pointer<  wxDataViewTreeCtrl > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DataViewTreeCtrl_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_imageList",1a,2d,8a,85));
	outFields->push(HX_("imageList",59,b1,e7,29));
	outFields->push(HX_("indent",6c,0c,f3,93));
	outFields->push(HX_("dataViewTreeCtrlRef",3b,32,5e,9e));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DataViewTreeCtrl_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::hx::widgets::ImageList */ ,(int)offsetof(DataViewTreeCtrl_obj,_imageList),HX_("_imageList",1a,2d,8a,85)},
	{::hx::fsUnknown /* ::cpp::Pointer<  wxDataViewTreeCtrl > */ ,(int)offsetof(DataViewTreeCtrl_obj,dataViewTreeCtrlRef),HX_("dataViewTreeCtrlRef",3b,32,5e,9e)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo DataViewTreeCtrl_obj_sStaticStorageInfo[] = {
	{::hx::fsUnknown /*  wxDataViewItem */ ,(void *) &DataViewTreeCtrl_obj::NULL_ITEM,HX_("NULL_ITEM",0b,39,5e,e2)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String DataViewTreeCtrl_obj_sMemberFields[] = {
	HX_("appendContainer",07,68,d8,f1),
	HX_("prependContainer",53,6c,2d,9e),
	HX_("insertContainer",c8,62,bd,ed),
	HX_("appendItem",0d,c8,cb,53),
	HX_("prependItem",41,27,ad,69),
	HX_("insertItem",ec,c4,aa,2b),
	HX_("_imageList",1a,2d,8a,85),
	HX_("get_imageList",30,85,4b,eb),
	HX_("set_imageList",3c,67,51,30),
	HX_("getItemText",16,06,ea,cf),
	HX_("setItemText",22,0d,57,da),
	HX_("setItemIconIndex",44,64,34,78),
	HX_("deleteAllItems",6a,8a,c7,14),
	HX_("deleteChildren",8a,38,41,ca),
	HX_("deleteItem",de,a2,0c,99),
	HX_("isContainer",f7,2b,f4,9d),
	HX_("getChildCount",c9,11,51,45),
	HX_("getNthChild",90,3b,5f,ff),
	HX_("getItemIndex",89,9d,56,cd),
	HX_("getNextItem",5c,2e,80,17),
	HX_("getPrevItem",5c,68,81,34),
	HX_("get_indent",35,7c,7a,84),
	HX_("set_indent",a9,1a,f8,87),
	HX_("dataViewTreeCtrlRef",3b,32,5e,9e),
	HX_("get_dataViewTreeCtrlRef",d2,d8,b3,a6),
	::String(null()) };

static void DataViewTreeCtrl_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DataViewTreeCtrl_obj::NULL_ITEM,"NULL_ITEM");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DataViewTreeCtrl_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DataViewTreeCtrl_obj::NULL_ITEM,"NULL_ITEM");
};

#endif

::hx::Class DataViewTreeCtrl_obj::__mClass;

void DataViewTreeCtrl_obj::__register()
{
	DataViewTreeCtrl_obj _hx_dummy;
	DataViewTreeCtrl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hx.widgets.DataViewTreeCtrl",55,fe,4a,43);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DataViewTreeCtrl_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DataViewTreeCtrl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DataViewTreeCtrl_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DataViewTreeCtrl_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DataViewTreeCtrl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DataViewTreeCtrl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DataViewTreeCtrl_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_39ebb083e28b6be6_15_boot)
HXDLIN(  15)		NULL_ITEM = wxDataViewItem(0);
            	}
}

} // end namespace hx
} // end namespace widgets
