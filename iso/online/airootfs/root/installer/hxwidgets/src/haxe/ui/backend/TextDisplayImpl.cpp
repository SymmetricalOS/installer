// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextBase
#include <haxe/ui/backend/TextBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextDisplayImpl
#include <haxe/ui/backend/TextDisplayImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_hx_widgets_Control
#include <hx/widgets/Control.h>
#endif
#ifndef INCLUDED_hx_widgets_EvtHandler
#include <hx/widgets/EvtHandler.h>
#endif
#ifndef INCLUDED_hx_widgets_Object
#include <hx/widgets/Object.h>
#endif
#ifndef INCLUDED_hx_widgets_TextCtrl
#include <hx/widgets/TextCtrl.h>
#endif
#ifndef INCLUDED_hx_widgets_TextEntry
#include <hx/widgets/TextEntry.h>
#endif
#ifndef INCLUDED_hx_widgets_Trackable
#include <hx/widgets/Trackable.h>
#endif
#ifndef INCLUDED_hx_widgets_Window
#include <hx/widgets/Window.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8071faafd25b045f_8_new,"haxe.ui.backend.TextDisplayImpl","new",0x7f5d76bb,"haxe.ui.backend.TextDisplayImpl.new","haxe/ui/backend/TextDisplayImpl.hx",8,0xee590bf6)
HX_LOCAL_STACK_FRAME(_hx_pos_8071faafd25b045f_10_get_selectionStartIndex,"haxe.ui.backend.TextDisplayImpl","get_selectionStartIndex",0xeba9032e,"haxe.ui.backend.TextDisplayImpl.get_selectionStartIndex","haxe/ui/backend/TextDisplayImpl.hx",10,0xee590bf6)
HX_LOCAL_STACK_FRAME(_hx_pos_8071faafd25b045f_15_set_selectionStartIndex,"haxe.ui.backend.TextDisplayImpl","set_selectionStartIndex",0xee0a6c3a,"haxe.ui.backend.TextDisplayImpl.set_selectionStartIndex","haxe/ui/backend/TextDisplayImpl.hx",15,0xee590bf6)
HX_LOCAL_STACK_FRAME(_hx_pos_8071faafd25b045f_23_get_selectionEndIndex,"haxe.ui.backend.TextDisplayImpl","get_selectionEndIndex",0x06016995,"haxe.ui.backend.TextDisplayImpl.get_selectionEndIndex","haxe/ui/backend/TextDisplayImpl.hx",23,0xee590bf6)
HX_LOCAL_STACK_FRAME(_hx_pos_8071faafd25b045f_28_set_selectionEndIndex,"haxe.ui.backend.TextDisplayImpl","set_selectionEndIndex",0x5a0a37a1,"haxe.ui.backend.TextDisplayImpl.set_selectionEndIndex","haxe/ui/backend/TextDisplayImpl.hx",28,0xee590bf6)
namespace haxe{
namespace ui{
namespace backend{

void TextDisplayImpl_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_8071faafd25b045f_8_new)
HXDLIN(   8)		super::__construct();
            	}

Dynamic TextDisplayImpl_obj::__CreateEmpty() { return new TextDisplayImpl_obj; }

void *TextDisplayImpl_obj::_hx_vtable = 0;

Dynamic TextDisplayImpl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextDisplayImpl_obj > _hx_result = new TextDisplayImpl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextDisplayImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0b41c5d8) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0b41c5d8;
	} else {
		return inClassId==(int)0x0c38975b;
	}
}

int TextDisplayImpl_obj::get_selectionStartIndex(){
            	HX_STACKFRAME(&_hx_pos_8071faafd25b045f_10_get_selectionStartIndex)
HXLINE(  11)		 ::hx::widgets::TextCtrl textCtrl = ::hx::TCast<  ::hx::widgets::TextCtrl >::cast(this->parentComponent->get_window());
HXLINE(  12)		return ( (int)(textCtrl->get_selection()->__Field(HX_("start",62,74,0b,84),::hx::paccDynamic)) );
            	}


int TextDisplayImpl_obj::set_selectionStartIndex(int value){
            	HX_STACKFRAME(&_hx_pos_8071faafd25b045f_15_set_selectionStartIndex)
HXLINE(  16)		 ::hx::widgets::TextCtrl textCtrl = ::hx::TCast<  ::hx::widgets::TextCtrl >::cast(this->parentComponent->get_window());
HXLINE(  17)		int endIndex;
HXDLIN(  17)		if ((this->get_selectionEndIndex() < value)) {
HXLINE(  17)			endIndex = value;
            		}
            		else {
HXLINE(  17)			endIndex = this->get_selectionEndIndex();
            		}
HXLINE(  18)		textCtrl->set_selection( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("start",62,74,0b,84),value)
            			->setFixed(1,HX_("end",db,03,4d,00),endIndex)));
HXLINE(  19)		return value;
            	}


int TextDisplayImpl_obj::get_selectionEndIndex(){
            	HX_STACKFRAME(&_hx_pos_8071faafd25b045f_23_get_selectionEndIndex)
HXLINE(  24)		 ::hx::widgets::TextCtrl textCtrl = ::hx::TCast<  ::hx::widgets::TextCtrl >::cast(this->parentComponent->get_window());
HXLINE(  25)		return ( (int)(textCtrl->get_selection()->__Field(HX_("end",db,03,4d,00),::hx::paccDynamic)) );
            	}


int TextDisplayImpl_obj::set_selectionEndIndex(int value){
            	HX_STACKFRAME(&_hx_pos_8071faafd25b045f_28_set_selectionEndIndex)
HXLINE(  29)		 ::hx::widgets::TextCtrl textCtrl = ::hx::TCast<  ::hx::widgets::TextCtrl >::cast(this->parentComponent->get_window());
HXLINE(  30)		textCtrl->set_selection( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("start",62,74,0b,84),this->get_selectionStartIndex())
            			->setFixed(1,HX_("end",db,03,4d,00),value)));
HXLINE(  31)		return value;
            	}



::hx::ObjectPtr< TextDisplayImpl_obj > TextDisplayImpl_obj::__new() {
	::hx::ObjectPtr< TextDisplayImpl_obj > __this = new TextDisplayImpl_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TextDisplayImpl_obj > TextDisplayImpl_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TextDisplayImpl_obj *__this = (TextDisplayImpl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TextDisplayImpl_obj), true, "haxe.ui.backend.TextDisplayImpl"));
	*(void **)__this = TextDisplayImpl_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TextDisplayImpl_obj::TextDisplayImpl_obj()
{
}

::hx::Val TextDisplayImpl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 21:
		if (HX_FIELD_EQ(inName,"get_selectionEndIndex") ) { return ::hx::Val( get_selectionEndIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectionEndIndex") ) { return ::hx::Val( set_selectionEndIndex_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_selectionStartIndex") ) { return ::hx::Val( get_selectionStartIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectionStartIndex") ) { return ::hx::Val( set_selectionStartIndex_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TextDisplayImpl_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TextDisplayImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String TextDisplayImpl_obj_sMemberFields[] = {
	HX_("get_selectionStartIndex",53,ed,ba,85),
	HX_("set_selectionStartIndex",5f,56,1c,88),
	HX_("get_selectionEndIndex",7a,10,f0,c9),
	HX_("set_selectionEndIndex",86,de,f8,1d),
	::String(null()) };

::hx::Class TextDisplayImpl_obj::__mClass;

void TextDisplayImpl_obj::__register()
{
	TextDisplayImpl_obj _hx_dummy;
	TextDisplayImpl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.backend.TextDisplayImpl",49,fd,9e,50);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TextDisplayImpl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TextDisplayImpl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextDisplayImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextDisplayImpl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace backend
