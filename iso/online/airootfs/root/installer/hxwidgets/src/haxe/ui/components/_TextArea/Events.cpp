// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextBase
#include <haxe/ui/backend/TextBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextDisplayImpl
#include <haxe/ui/backend/TextDisplayImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextInputImpl
#include <haxe/ui/backend/TextInputImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalScroll
#include <haxe/ui/components/HorizontalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Scroll
#include <haxe/ui/components/Scroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextArea
#include <haxe/ui/components/TextArea.h>
#endif
#ifndef INCLUDED_haxe_ui_components_VerticalScroll
#include <haxe/ui/components/VerticalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_Events
#include <haxe/ui/components/_TextArea/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaBuilder
#include <haxe/ui/components/_TextArea/TextAreaBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaHelper
#include <haxe/ui/components/_TextArea/TextAreaHelper.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IValueComponent
#include <haxe/ui/core/IValueComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInput
#include <haxe/ui/core/TextInput.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInputData
#include <haxe/ui/core/TextInputData.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_FocusEvent
#include <haxe/ui/events/FocusEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_326_new,"haxe.ui.components._TextArea.Events","new",0x0d67cc26,"haxe.ui.components._TextArea.Events.new","haxe/ui/components/TextArea.hx",326,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_331_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",331,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_335_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",335,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_356_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",356,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_392_unregister,"haxe.ui.components._TextArea.Events","unregister",0x149936b6,"haxe.ui.components._TextArea.Events.unregister","haxe/ui/components/TextArea.hx",392,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_412_onMouseWheel,"haxe.ui.components._TextArea.Events","onMouseWheel",0xb57825af,"haxe.ui.components._TextArea.Events.onMouseWheel","haxe/ui/components/TextArea.hx",412,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_433_onScrollChange,"haxe.ui.components._TextArea.Events","onScrollChange",0xf97af316,"haxe.ui.components._TextArea.Events.onScrollChange","haxe/ui/components/TextArea.hx",433,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_457_onMouseDown,"haxe.ui.components._TextArea.Events","onMouseDown",0xc1c3c5ce,"haxe.ui.components._TextArea.Events.onMouseDown","haxe/ui/components/TextArea.hx",457,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_460_onFocusChange,"haxe.ui.components._TextArea.Events","onFocusChange",0x6f6aa3cf,"haxe.ui.components._TextArea.Events.onFocusChange","haxe/ui/components/TextArea.hx",460,0xfe441d7d)
namespace haxe{
namespace ui{
namespace components{
namespace _TextArea{

void Events_obj::__construct( ::haxe::ui::components::TextArea textarea){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_326_new)
HXLINE( 327)		super::__construct(textarea);
HXLINE( 328)		this->_textarea = textarea;
            	}

Dynamic Events_obj::__CreateEmpty() { return new Events_obj; }

void *Events_obj::_hx_vtable = 0;

Dynamic Events_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Events_obj > _hx_result = new Events_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Events_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0548a7cc) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0548a7cc;
	} else {
		return inClassId==(int)0x07064ec2;
	}
}

void Events_obj::_hx_register(){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_331_register)
HXDLIN( 331)		 ::haxe::ui::components::_TextArea::Events _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 332)		if (::hx::IsNull( this->_textarea->getTextInput()->get_data()->onChangedCallback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::haxe::ui::components::_TextArea::Events,_gthis) HXARGC(0)
            			void _hx_run(){
            				HX_GC_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_335_register)
HXLINE( 335)				if (((_gthis->_textarea->classes->indexOf(HX_(":empty",13,28,8d,a0),null()) != -1) == false)) {
HXLINE( 336)					::String text = _gthis->_textarea->getTextInput()->get_text();
HXLINE( 337)					if (::hx::IsNull( text )) {
HXLINE( 338)						text = HX_("",00,00,00,00);
            					}
HXLINE( 340)					_gthis->_textarea->set_text(text);
HXLINE( 341)					 ::haxe::ui::components::TextArea _gthis1 = _gthis->_textarea;
HXDLIN( 341)					_gthis1->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
HXLINE( 342)					if (::hx::IsEq( _gthis->_textarea->get_style()->autoHeight,true )) {
HXLINE( 343)						 ::Dynamic maxHeight = _gthis->_textarea->get_style()->maxHeight;
HXLINE( 344)						Float newHeight = (_gthis->_textarea->getTextInput()->get_textHeight() + 8);
HXLINE( 345)						bool _hx_tmp;
HXDLIN( 345)						if (::hx::IsNotNull( maxHeight )) {
HXLINE( 345)							_hx_tmp = ::hx::IsLess( newHeight,maxHeight );
            						}
            						else {
HXLINE( 345)							_hx_tmp = true;
            						}
HXDLIN( 345)						if (_hx_tmp) {
HXLINE( 346)							_gthis->_textarea->set_height(newHeight);
            						}
            					}
HXLINE( 350)					::hx::TCast<  ::haxe::ui::components::_TextArea::TextAreaBuilder >::cast(_gthis->_textarea->_compositeBuilder)->checkScrolls();
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 333)			this->_textarea->getTextInput()->set_multiline(true);
HXLINE( 334)			this->_textarea->getTextInput()->get_data()->onChangedCallback =  ::Dynamic(new _hx_Closure_0(_gthis));
            		}
HXLINE( 355)		if (::hx::IsNull( this->_textarea->getTextInput()->get_data()->onScrollCallback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::haxe::ui::components::_TextArea::Events,_gthis) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_356_register)
HXLINE( 357)				 ::haxe::ui::components::HorizontalScroll hscroll = _gthis->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 358)				if (::hx::IsNotNull( hscroll )) {
HXLINE( 359)					hscroll->set_pos(_gthis->_textarea->getTextInput()->get_hscrollPos());
            				}
HXLINE( 361)				 ::haxe::ui::components::VerticalScroll vscroll = _gthis->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 362)				if (::hx::IsNotNull( vscroll )) {
HXLINE( 363)					vscroll->set_pos(_gthis->_textarea->getTextInput()->get_vscrollPos());
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 356)			this->_textarea->getTextInput()->get_data()->onScrollCallback =  ::Dynamic(new _hx_Closure_1(_gthis));
            		}
HXLINE( 368)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 369)		bool _hx_tmp;
HXDLIN( 369)		if (::hx::IsNotNull( hscroll )) {
HXLINE( 369)			_hx_tmp = (hscroll->hasEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn()) == false);
            		}
            		else {
HXLINE( 369)			_hx_tmp = false;
            		}
HXDLIN( 369)		if (_hx_tmp) {
HXLINE( 370)			hscroll->registerEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn(),null());
            		}
HXLINE( 373)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 374)		bool _hx_tmp1;
HXDLIN( 374)		if (::hx::IsNotNull( vscroll )) {
HXLINE( 374)			_hx_tmp1 = (vscroll->hasEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn()) == false);
            		}
            		else {
HXLINE( 374)			_hx_tmp1 = false;
            		}
HXDLIN( 374)		if (_hx_tmp1) {
HXLINE( 375)			vscroll->registerEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn(),null());
            		}
HXLINE( 378)		if ((this->hasEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn()) == false)) {
HXLINE( 379)			this->registerEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn(),null());
            		}
HXLINE( 381)		if ((this->hasEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn()) == false)) {
HXLINE( 382)			this->registerEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn(),null());
            		}
HXLINE( 384)		if ((this->hasEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn()) == false)) {
HXLINE( 385)			this->registerEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn(),null());
            		}
HXLINE( 387)		if ((this->hasEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn()) == false)) {
HXLINE( 388)			this->registerEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn(),null());
            		}
            	}


void Events_obj::unregister(){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_392_unregister)
HXLINE( 393)		this->_textarea->getTextInput()->get_data()->onChangedCallback = null();
HXLINE( 394)		this->_textarea->getTextInput()->get_data()->onScrollCallback = null();
HXLINE( 396)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 397)		if (::hx::IsNotNull( hscroll )) {
HXLINE( 398)			hscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn());
            		}
HXLINE( 401)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 402)		if (::hx::IsNotNull( vscroll )) {
HXLINE( 403)			vscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn());
            		}
HXLINE( 406)		this->unregisterEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn());
HXLINE( 407)		this->unregisterEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn());
HXLINE( 408)		this->unregisterEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn());
HXLINE( 409)		this->unregisterEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn());
            	}


void Events_obj::onMouseWheel( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_412_onMouseWheel)
HXLINE( 413)		if ((this->_textarea->getTextInput()->get_data()->vscrollNativeWheel == true)) {
HXLINE( 414)			return;
            		}
HXLINE( 416)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 417)		if (::hx::IsNotNull( vscroll )) {
HXLINE( 418)			event->cancel();
HXLINE( 419)			Float step = ( (Float)(20) );
HXLINE( 420)			if (::hx::IsNotNull( this->_textarea->getTextInput()->get_data()->vscrollPageStep )) {
HXLINE( 421)				step = ( (Float)(this->_textarea->getTextInput()->get_data()->vscrollPageStep) );
            			}
            			else {
HXLINE( 423)				step = ( (Float)((::Math_obj::ceil(((this->_textarea->getTextInput()->get_textStyle()->fontSize + 1) / ( (Float)(10) ))) * 10)) );
            			}
HXLINE( 425)			if ((event->delta > 0)) {
HXLINE( 426)				vscroll->set_pos((vscroll->get_pos() - step));
            			}
            			else {
HXLINE( 427)				if ((event->delta < 0)) {
HXLINE( 428)					vscroll->set_pos((vscroll->get_pos() + step));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onMouseWheel,(void))

void Events_obj::onScrollChange( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_433_onScrollChange)
HXLINE( 434)		if (::hx::IsEq( this->_textarea->get_style()->autoHeight,true )) {
HXLINE( 435)			 ::Dynamic maxHeight = this->_textarea->get_style()->maxHeight;
HXLINE( 436)			Float newHeight = (this->_textarea->getTextInput()->get_textHeight() + 8);
HXLINE( 437)			bool _hx_tmp;
HXDLIN( 437)			if (::hx::IsNotNull( maxHeight )) {
HXLINE( 437)				_hx_tmp = ::hx::IsLess( newHeight,maxHeight );
            			}
            			else {
HXLINE( 437)				_hx_tmp = true;
            			}
HXDLIN( 437)			if (_hx_tmp) {
HXLINE( 438)				this->_textarea->set_height(newHeight);
            			}
HXLINE( 440)			bool _hx_tmp1;
HXDLIN( 440)			if (::hx::IsNotNull( maxHeight )) {
HXLINE( 440)				_hx_tmp1 = ::hx::IsGreater( newHeight,maxHeight );
            			}
            			else {
HXLINE( 440)				_hx_tmp1 = false;
            			}
HXDLIN( 440)			if (_hx_tmp1) {
HXLINE( 441)				this->_textarea->set_height(maxHeight);
            			}
            		}
HXLINE( 444)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 445)		if (::hx::IsNotNull( hscroll )) {
HXLINE( 446)			 ::haxe::ui::core::TextInput _hx_tmp2 = this->_textarea->getTextInput();
HXDLIN( 446)			_hx_tmp2->set_hscrollPos(hscroll->get_pos());
            		}
HXLINE( 449)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),::hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 450)		if (::hx::IsNotNull( vscroll )) {
HXLINE( 451)			 ::haxe::ui::core::TextInput _hx_tmp3 = this->_textarea->getTextInput();
HXDLIN( 451)			_hx_tmp3->set_vscrollPos(vscroll->get_pos());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onScrollChange,(void))

void Events_obj::onMouseDown( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_457_onMouseDown)
HXDLIN( 457)		this->_textarea->set_focus(true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onMouseDown,(void))

void Events_obj::onFocusChange( ::haxe::ui::events::FocusEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_460_onFocusChange)
HXLINE( 461)		if ((this->_textarea->get_focus() == true)) {
HXLINE( 462)			this->_textarea->getTextInput()->focus();
            		}
            		else {
HXLINE( 464)			this->_textarea->getTextInput()->blur();
            		}
HXLINE( 466)		 ::haxe::ui::components::TextArea _hx_tmp = this->_textarea;
HXDLIN( 466)		::haxe::ui::components::_TextArea::TextAreaHelper_obj::validateText(_hx_tmp,this->_textarea->get_text());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onFocusChange,(void))


::hx::ObjectPtr< Events_obj > Events_obj::__new( ::haxe::ui::components::TextArea textarea) {
	::hx::ObjectPtr< Events_obj > __this = new Events_obj();
	__this->__construct(textarea);
	return __this;
}

::hx::ObjectPtr< Events_obj > Events_obj::__alloc(::hx::Ctx *_hx_ctx, ::haxe::ui::components::TextArea textarea) {
	Events_obj *__this = (Events_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Events_obj), true, "haxe.ui.components._TextArea.Events"));
	*(void **)__this = Events_obj::_hx_vtable;
	__this->__construct(textarea);
	return __this;
}

Events_obj::Events_obj()
{
}

void Events_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Events);
	HX_MARK_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::events::Events_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Events_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::events::Events_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Events_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { return ::hx::Val( _hx_register_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { return ::hx::Val( _textarea ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"unregister") ) { return ::hx::Val( unregister_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return ::hx::Val( onMouseDown_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return ::hx::Val( onMouseWheel_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onFocusChange") ) { return ::hx::Val( onFocusChange_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onScrollChange") ) { return ::hx::Val( onScrollChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Events_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { _textarea=inValue.Cast<  ::haxe::ui::components::TextArea >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Events_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_textarea",19,aa,2c,a0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Events_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ui::components::TextArea */ ,(int)offsetof(Events_obj,_textarea),HX_("_textarea",19,aa,2c,a0)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Events_obj_sStaticStorageInfo = 0;
#endif

static ::String Events_obj_sMemberFields[] = {
	HX_("_textarea",19,aa,2c,a0),
	HX_("register",63,a6,9f,d0),
	HX_("unregister",bc,8d,63,56),
	HX_("onMouseWheel",35,ca,ca,bf),
	HX_("onScrollChange",1c,45,24,39),
	HX_("onMouseDown",08,94,05,11),
	HX_("onFocusChange",89,f4,67,6d),
	::String(null()) };

::hx::Class Events_obj::__mClass;

void Events_obj::__register()
{
	Events_obj _hx_dummy;
	Events_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components._TextArea.Events",34,81,81,78);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Events_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Events_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Events_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Events_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
} // end namespace _TextArea
