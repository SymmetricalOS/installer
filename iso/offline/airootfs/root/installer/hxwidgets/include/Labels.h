// Generated by Haxe 4.3.3
#ifndef INCLUDED_Labels
#define INCLUDED_Labels

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Labels)



class HXCPP_CLASS_ATTRIBUTES Labels_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Labels_obj OBJ_;
		Labels_obj();

	public:
		enum { _hx_ClassId = 0x45a96343 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Labels")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Labels"); }

		inline static ::hx::ObjectPtr< Labels_obj > __new() {
			::hx::ObjectPtr< Labels_obj > __this = new Labels_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Labels_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Labels_obj *__this = (Labels_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Labels_obj), false, "Labels"));
			*(void **)__this = Labels_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Labels_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Labels",1f,9c,11,7e); }

		static void __boot();
		static ::String common_back;
		static ::String common_next;
		static ::String common_cancel;
		static ::String common_finish;
		static ::String main_title;
		static ::String main_welcomedesc;
};


#endif /* INCLUDED_Labels */ 
