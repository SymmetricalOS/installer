// Generated by Haxe 4.3.3
#ifndef INCLUDED_hx_widgets_Clipboard
#define INCLUDED_hx_widgets_Clipboard

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_hx_widgets_Object
#include <hx/widgets/Object.h>
#endif
#ifndef INCLUDED_d3ff2c044ad995f9
#define INCLUDED_d3ff2c044ad995f9
#include "wx/clipbrd.h"
#endif
HX_DECLARE_CLASS2(hx,widgets,Clipboard)
HX_DECLARE_CLASS2(hx,widgets,DataObject)
HX_DECLARE_CLASS2(hx,widgets,Object)

namespace hx{
namespace widgets{


class HXCPP_CLASS_ATTRIBUTES Clipboard_obj : public  ::hx::widgets::Object_obj
{
	public:
		typedef  ::hx::widgets::Object_obj super;
		typedef Clipboard_obj OBJ_;
		Clipboard_obj();

	public:
		enum { _hx_ClassId = 0x0d3fa7b7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hx.widgets.Clipboard")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hx.widgets.Clipboard"); }
		static ::hx::ObjectPtr< Clipboard_obj > __new();
		static ::hx::ObjectPtr< Clipboard_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Clipboard_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Clipboard",b6,45,aa,e3); }

		static  ::hx::widgets::Clipboard get();
		static ::Dynamic get_dyn();

		static ::String get_textData();
		static ::Dynamic get_textData_dyn();

		static ::String set_textData(::String value);
		static ::Dynamic set_textData_dyn();

		bool open();
		::Dynamic open_dyn();

		void close();
		::Dynamic close_dyn();

		bool getData( ::hx::widgets::DataObject data);
		::Dynamic getData_dyn();

		bool setData( ::hx::widgets::DataObject data);
		::Dynamic setData_dyn();

		::cpp::Pointer<  wxClipboard > clipboardRef;
		::cpp::Pointer<  wxClipboard > get_clipboardRef();
		::Dynamic get_clipboardRef_dyn();

};

} // end namespace hx
} // end namespace widgets

#endif /* INCLUDED_hx_widgets_Clipboard */ 
