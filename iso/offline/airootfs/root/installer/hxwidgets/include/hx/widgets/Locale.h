// Generated by Haxe 4.3.3
#ifndef INCLUDED_hx_widgets_Locale
#define INCLUDED_hx_widgets_Locale

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hx,widgets,Locale)

namespace hx{
namespace widgets{


class HXCPP_CLASS_ATTRIBUTES Locale_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Locale_obj OBJ_;
		Locale_obj();

	public:
		enum { _hx_ClassId = 0x64c5ac19 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hx.widgets.Locale")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hx.widgets.Locale"); }

		inline static ::hx::ObjectPtr< Locale_obj > __new() {
			::hx::ObjectPtr< Locale_obj > __this = new Locale_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Locale_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Locale_obj *__this = (Locale_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Locale_obj), false, "hx.widgets.Locale"));
			*(void **)__this = Locale_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Locale_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Locale",ba,e8,53,8e); }

		static ::String getLanguageName(int lang);
		static ::Dynamic getLanguageName_dyn();

		static ::String getLanguageCanonicalName(int lang);
		static ::Dynamic getLanguageCanonicalName_dyn();

		static ::String systemEncodingName;
		static ::String get_systemEncodingName();
		static ::Dynamic get_systemEncodingName_dyn();

		static int systemLanguage;
		static int get_systemLanguage();
		static ::Dynamic get_systemLanguage_dyn();

		static bool isAvailable(int lang);
		static ::Dynamic isAvailable_dyn();

};

} // end namespace hx
} // end namespace widgets

#endif /* INCLUDED_hx_widgets_Locale */ 
